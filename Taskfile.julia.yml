# Julia Setup and Installation Tasks
# https://taskfile.dev

version: '3'

tasks:
  check-juliaup:
    desc: "Check if juliaup is installed and offer installation if not"
    cmds:
      - |
        if command -v juliaup >/dev/null 2>&1; then
          echo "‚úÖ juliaup is already installed"
          juliaup status
        else
          echo "‚ùå juliaup is not installed"
          echo ""
          echo "juliaup is the recommended Julia version manager."
          echo "It allows you to easily install and manage multiple Julia versions."
          echo ""
          task: show-install-instructions
          exit 1
        fi
    silent: true

  show-install-instructions:
    desc: "Show OS-specific installation instructions for juliaup"
    cmds:
      - task: show-install-instructions:{{OS}}
    silent: true

  show-install-instructions:darwin:
    desc: "Show macOS installation instructions"
    platforms: [darwin]
    cmds:
      - |
        echo "üçé macOS detected"
        echo ""
        echo "Installation options:"
        echo "1. Official installer (recommended):"
        echo "   curl -fsSL https://install.julialang.org | sh"
        echo ""
        echo "2. Homebrew:"
        echo "   brew install juliaup"
        echo ""
        echo "3. Use the automated installer:"
        echo "   task julia:install-juliaup"
        echo ""
        task: show-post-install
    silent: true

  show-install-instructions:linux:
    desc: "Show Linux installation instructions"
    platforms: [linux]
    cmds:
      - |
        echo "üêß Linux detected"
        echo ""
        echo "Installation options:"
        echo "1. Official installer (recommended):"
        echo "   curl -fsSL https://install.julialang.org | sh"
        echo ""
        echo "2. Package managers (if available):"
        if command -v pacman >/dev/null 2>&1; then
          echo "   - Arch Linux (AUR): yay -S juliaup"
        fi
        if command -v zypper >/dev/null 2>&1; then
          echo "   - openSUSE: sudo zypper install juliaup"
        fi
        if command -v eopkg >/dev/null 2>&1; then
          echo "   - Solus: sudo eopkg install juliaup"
        fi
        echo "   - Cargo: cargo install juliaup"
        echo ""
        echo "3. Use the automated installer:"
        echo "   task julia:install-juliaup"
        echo ""
        task: show-post-install
    silent: true

  show-install-instructions:windows:
    desc: "Show Windows installation instructions"
    platforms: [windows]
    cmds:
      - |
        echo "ü™ü Windows detected"
        echo ""
        echo "Installation options:"
        echo "1. Windows Store (recommended):"
        echo "   Search for 'Julia' in the Microsoft Store"
        echo "   Or run: winget install --name Julia --id 9NJNWW8PVKMN -e -s msstore"
        echo ""
        echo "2. MSIX App Installer (experimental):"
        echo "   Download and run: https://install.julialang.org/Julia.appinstaller"
        echo ""
        echo "3. MSI Installer (limited functionality):"
        echo "   64-bit: https://install.julialang.org/Julia-x64.msi"
        echo "   32-bit: https://install.julialang.org/Julia-x86.msi"
        echo ""
        task: show-post-install
    silent: true

  show-install-instructions:freebsd:
    desc: "Show FreeBSD installation instructions"
    platforms: [freebsd]
    cmds:
      - |
        echo "üî± FreeBSD detected"
        echo ""
        echo "Installation options:"
        echo "1. Official installer:"
        echo "   curl -fsSL https://install.julialang.org | sh"
        echo ""
        echo "2. Use the automated installer:"
        echo "   task julia:install-juliaup"
        echo ""
        task: show-post-install
    silent: true

  show-post-install:
    desc: "Show post-installation instructions"
    cmds:
      - |
        echo "After installation:"
        echo "- Restart your shell or run 'source ~/.bashrc' (or equivalent)"
        echo "- Run 'task julia:check-juliaup' again to verify installation"
        echo "- Use 'task julia:install-julia' to install Julia 1.11.6"
        echo "- Use 'julia' to start Julia"
        echo ""
        echo "For more information, visit: https://github.com/JuliaLang/juliaup"
    silent: true

  install-juliaup:
    desc: "Install juliaup using the official installer"
    cmds:
      - task: install-juliaup:{{OS}}
    silent: true

  install-juliaup:darwin:
    desc: "Install juliaup on macOS"
    platforms: [darwin]
    cmds:
      - |
        echo "üöÄ Installing juliaup on macOS using the official installer..."
        curl -fsSL https://install.julialang.org | sh
        echo ""
        echo "‚úÖ Installation complete!"
        task: show-post-install
    silent: true

  install-juliaup:linux:
    desc: "Install juliaup on Linux"
    platforms: [linux]
    cmds:
      - |
        echo "üöÄ Installing juliaup on Linux using the official installer..."
        curl -fsSL https://install.julialang.org | sh
        echo ""
        echo "‚úÖ Installation complete!"
        task: show-post-install
    silent: true

  install-juliaup:freebsd:
    desc: "Install juliaup on FreeBSD"
    platforms: [freebsd]
    cmds:
      - |
        echo "üöÄ Installing juliaup on FreeBSD using the official installer..."
        curl -fsSL https://install.julialang.org | sh
        echo ""
        echo "‚úÖ Installation complete!"
        task: show-post-install
    silent: true

  install-juliaup:windows:
    desc: "Show Windows installation instructions (automated install not available)"
    platforms: [windows]
    cmds:
      - |
        echo "‚ùå Automated installation is not available for Windows."
        echo "Please use one of the methods shown below:"
        echo ""
        task: show-install-instructions:windows
    silent: true

  install-julia:
    desc: "Install Julia 1.11.6 using juliaup"
    deps: [check-juliaup]
    cmds:
      - |
        echo "üöÄ Installing Julia 1.11.6..."
        
        # Check if Julia 1.11.6 is already installed
        if juliaup status | grep -q "1.11.6"; then
          echo "‚úÖ Julia 1.11.6 is already installed"
        else
          echo "üì¶ Adding Julia 1.11.6..."
          juliaup add 1.11.6
          echo "‚úÖ Julia 1.11.6 installed successfully!"
        fi
        
        # Set as default if no default is set or if user confirms
        current_default=$(juliaup status | grep "^\s*\*" | awk '{print $2}' || echo "")
        if [ -z "$current_default" ]; then
          echo "üéØ Setting Julia 1.11.6 as default..."
          juliaup default 1.11.6
          echo "‚úÖ Julia 1.11.6 is now the default version"
        else
          echo ""
          echo "Current default Julia version: $current_default"
          echo "To set Julia 1.11.6 as default, run: juliaup default 1.11.6"
        fi
        
        echo ""
        echo "üìä Current Julia status:"
        juliaup status
        echo ""
        echo "üéâ You can now use Julia 1.11.6 with:"
        echo "   julia           # (if set as default)"
        echo "   julia +1.11.6   # (specific version)"
    silent: true

  install-julia-version:
    desc: "Install a specific Julia version using juliaup (usage: task julia:install-julia-version VERSION=1.10.0)"
    deps: [check-juliaup]
    vars:
      VERSION: '{{.VERSION | default "release"}}'
    cmds:
      - |
        if [ "{{.VERSION}}" = "release" ]; then
          echo "‚ùå Please specify a Julia version using VERSION=x.y.z"
          echo "Example: task julia:install-julia-version VERSION=1.10.0"
          echo "Available versions can be seen with: juliaup list"
          exit 1
        fi
        
        echo "üöÄ Installing Julia {{.VERSION}}..."
        
        # Check if the specified version is already installed
        if juliaup status | grep -q "{{.VERSION}}"; then
          echo "‚úÖ Julia {{.VERSION}} is already installed"
        else
          echo "üì¶ Adding Julia {{.VERSION}}..."
          juliaup add {{.VERSION}}
          echo "‚úÖ Julia {{.VERSION}} installed successfully!"
        fi
        
        echo ""
        echo "üìä Current Julia status:"
        juliaup status
        echo ""
        echo "üéâ You can now use Julia {{.VERSION}} with:"
        echo "   julia +{{.VERSION}}   # (specific version)"
        echo ""
        echo "To set as default: juliaup default {{.VERSION}}"
    silent: true

  setup:
    desc: "Complete Julia setup - install juliaup and Julia 1.11.6"
    cmds:
      - |
        echo "üöÄ Starting complete Julia setup..."
        echo ""
      - task: check-juliaup
      - task: install-julia
      - |
        echo ""
        echo "üéâ Julia setup complete!"
        echo "You can now use Julia in your project."
    silent: true

  help:
    desc: "Show Julia setup help"
    cmds:
      - |
        echo "üîß Julia Development Environment Setup"
        echo ""
        echo "Available tasks:"
        echo "  task julia:check-juliaup         - Check if juliaup is installed"
        echo "  task julia:install-juliaup       - Install juliaup (Julia version manager)"
        echo "  task julia:install-julia         - Install Julia 1.11.6 (recommended)"
        echo "  task julia:install-julia-version - Install specific Julia version"
        echo "  task julia:setup                 - Complete setup (juliaup + Julia 1.11.6)"
        echo ""
        echo "Quick start:"
        echo "  task julia:setup                 # One-command setup"
        echo ""
        echo "Examples:"
        echo "  task julia:install-julia-version VERSION=1.10.0"
        echo "  task julia:install-julia-version VERSION=lts"
        echo ""
        echo "For more help, visit: https://github.com/JuliaLang/juliaup"
    silent: true
