name: Render and Deploy Quarto Paper

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  render:
    runs-on: ubuntu-latest
    outputs:
      has-artifacts: ${{ steps.check-outputs.outputs.has-artifacts }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Setup Julia
        uses: julia-actions/install-juliaup@v2
        with:
          channel: '1.11.6'

      - name: Cache Julia
        uses: julia-actions/cache@v1
        with:
          cache-name: julia-cache-artifacts
          cache-compiled: true

      - name: Install Julia dependencies
        run: |
          julia +1.11.6 --project=. -e '
            using Pkg
            Pkg.instantiate()
            Pkg.precompile()
          '

      - name: Cache Quarto
        uses: actions/cache@v4
        with:
          path: |
            .cache
            .quarto/project-cache
          key: ${{ runner.os }}-${{ github.ref_name }}-quarto
          restore-keys: |
            ${{ runner.os }}-main-quarto

      - name: Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: "1.8.24"
          tinytex: true

      - name: Validate Quarto project
        run: quarto check

      - name: Render Quarto project
        run: |
          quarto render --to html,pdf
        env:
          JULIA_NUM_THREADS: auto

      - name: Check for outputs
        id: check-outputs
        run: |
          outputs_exist="false"
          if [ -f "_site/index.html" ] || [ -f "index.html" ]; then
            outputs_exist="true"
          fi
          if [ -f "index.pdf" ]; then
            outputs_exist="true"
          fi
          echo "has-artifacts=$outputs_exist" >> $GITHUB_OUTPUT
          echo "Found outputs: $outputs_exist"

      - name: List generated files
        run: |
          echo "Generated files:"
          find . -name "*.html" -o -name "*.pdf" | head -20

      - name: Upload artifacts
        if: steps.check-outputs.outputs.has-artifacts == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: quarto-outputs-${{ github.sha }}
          path: |
            index.pdf
            _site/
          retention-days: 30
          if-no-files-found: warn

      - name: Setup Pages
        if: github.ref == 'refs/heads/main' && steps.check-outputs.outputs.has-artifacts == 'true'
        uses: actions/configure-pages@v4

      - name: Upload to GitHub Pages
        if: github.ref == 'refs/heads/main' && steps.check-outputs.outputs.has-artifacts == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    if: github.ref == 'refs/heads/main' && needs.render.outputs.has-artifacts == 'true'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: render
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

